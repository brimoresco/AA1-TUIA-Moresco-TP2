2025-02-06 16:11:59,873:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 16:11:59,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 16:11:59,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 16:11:59,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 16:18:26,935:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_15204\3373215346.py:8: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train[bimodal_columns] = knn_imputer.fit_transform(train[bimodal_columns])

2025-02-06 16:18:27,097:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_15204\3813415309.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train[col].fillna(train[col].mode()[0], inplace=True)

2025-02-06 16:18:41,364:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_15204\985624217.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test[bimodal_columns] = knn_imputer.transform(test[bimodal_columns])  # Usar el imputador entrenado con el conjunto de entrenamiento

2025-02-06 16:18:41,367:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_15204\985624217.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test[col].fillna(train[col].mode()[0], inplace=True)  # Usar la moda del conjunto de entrenamiento

2025-02-06 16:19:05,851:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_15204\1098054911.py:12: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['WindGustDir'] = train['WindGustDir'].map(diccionario_invertido)

2025-02-06 16:19:05,852:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_15204\1098054911.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['WindDir9am'] = train['WindDir9am'].map(diccionario_invertido)

2025-02-06 16:19:05,859:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_15204\1098054911.py:18: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['WindDir3pm'] = train['WindDir3pm'].map(diccionario_invertido)

2025-02-06 16:19:06,164:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_15204\1802969872.py:12: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['WindGustDir'] = test['WindGustDir'].map(diccionario_invertido)

2025-02-06 16:19:06,167:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_15204\1802969872.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['WindDir9am'] = test['WindDir9am'].map(diccionario_invertido)

2025-02-06 16:19:06,170:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_15204\1802969872.py:18: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['WindDir3pm'] = test['WindDir3pm'].map(diccionario_invertido)

2025-02-06 17:07:06,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 17:07:06,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 17:07:06,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 17:07:06,036:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 17:13:23,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 17:13:23,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 17:13:23,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 17:13:23,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-06 17:14:17,572:INFO:PyCaret ClassificationExperiment
2025-02-06 17:14:17,573:INFO:Logging name: clf-default-name
2025-02-06 17:14:17,573:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-06 17:14:17,573:INFO:version 3.3.2
2025-02-06 17:14:17,573:INFO:Initializing setup()
2025-02-06 17:14:17,573:INFO:self.USI: c25f
2025-02-06 17:14:17,573:INFO:self._variable_keys: {'fold_shuffle_param', '_available_plots', 'X_train', 'fix_imbalance', 'fold_generator', 'USI', '_ml_usecase', 'seed', 'gpu_param', 'html_param', 'logging_param', 'data', 'y_test', 'exp_name_log', 'n_jobs_param', 'target_param', 'idx', 'memory', 'pipeline', 'exp_id', 'log_plots_param', 'gpu_n_jobs_param', 'y', 'fold_groups_param', 'y_train', 'X_test', 'is_multiclass', 'X'}
2025-02-06 17:14:17,573:INFO:Checking environment
2025-02-06 17:14:17,573:INFO:python_version: 3.11.5
2025-02-06 17:14:17,573:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2025-02-06 17:14:17,573:INFO:machine: AMD64
2025-02-06 17:14:17,573:INFO:platform: Windows-10-10.0.22631-SP0
2025-02-06 17:14:17,591:INFO:Memory: svmem(total=7772880896, available=1058131968, percent=86.4, used=6714748928, free=1058131968)
2025-02-06 17:14:17,591:INFO:Physical Core: 4
2025-02-06 17:14:17,591:INFO:Logical Core: 8
2025-02-06 17:14:17,591:INFO:Checking libraries
2025-02-06 17:14:17,591:INFO:System:
2025-02-06 17:14:17,591:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2025-02-06 17:14:17,597:INFO:executable: c:\Users\brisa\AppData\Local\Programs\Python\Python311\python.exe
2025-02-06 17:14:17,597:INFO:   machine: Windows-10-10.0.22631-SP0
2025-02-06 17:14:17,597:INFO:PyCaret required dependencies:
2025-02-06 17:14:17,872:INFO:                 pip: 24.2
2025-02-06 17:14:17,872:INFO:          setuptools: 65.5.0
2025-02-06 17:14:17,872:INFO:             pycaret: 3.3.2
2025-02-06 17:14:17,872:INFO:             IPython: 8.26.0
2025-02-06 17:14:17,872:INFO:          ipywidgets: 8.1.5
2025-02-06 17:14:17,872:INFO:                tqdm: 4.66.5
2025-02-06 17:14:17,872:INFO:               numpy: 1.26.4
2025-02-06 17:14:17,872:INFO:              pandas: 2.1.4
2025-02-06 17:14:17,872:INFO:              jinja2: 3.1.4
2025-02-06 17:14:17,872:INFO:               scipy: 1.11.4
2025-02-06 17:14:17,872:INFO:              joblib: 1.3.2
2025-02-06 17:14:17,872:INFO:             sklearn: 1.4.2
2025-02-06 17:14:17,872:INFO:                pyod: 2.0.3
2025-02-06 17:14:17,872:INFO:            imblearn: 0.13.0
2025-02-06 17:14:17,872:INFO:   category_encoders: 2.7.0
2025-02-06 17:14:17,872:INFO:            lightgbm: 4.5.0
2025-02-06 17:14:17,872:INFO:               numba: 0.60.0
2025-02-06 17:14:17,872:INFO:            requests: 2.32.3
2025-02-06 17:14:17,872:INFO:          matplotlib: 3.7.5
2025-02-06 17:14:17,872:INFO:          scikitplot: 0.3.7
2025-02-06 17:14:17,872:INFO:         yellowbrick: 1.5
2025-02-06 17:14:17,872:INFO:              plotly: 5.24.1
2025-02-06 17:14:17,872:INFO:    plotly-resampler: Not installed
2025-02-06 17:14:17,872:INFO:             kaleido: 0.2.1
2025-02-06 17:14:17,872:INFO:           schemdraw: 0.15
2025-02-06 17:14:17,872:INFO:         statsmodels: 0.14.4
2025-02-06 17:14:17,872:INFO:              sktime: 0.26.0
2025-02-06 17:14:17,872:INFO:               tbats: 1.1.3
2025-02-06 17:14:17,872:INFO:            pmdarima: 2.0.4
2025-02-06 17:14:17,872:INFO:              psutil: 6.0.0
2025-02-06 17:14:17,872:INFO:          markupsafe: 2.1.5
2025-02-06 17:14:17,872:INFO:             pickle5: Not installed
2025-02-06 17:14:17,872:INFO:         cloudpickle: 3.1.1
2025-02-06 17:14:17,872:INFO:         deprecation: 2.1.0
2025-02-06 17:14:17,872:INFO:              xxhash: 3.5.0
2025-02-06 17:14:17,872:INFO:           wurlitzer: Not installed
2025-02-06 17:14:17,872:INFO:PyCaret optional dependencies:
2025-02-06 17:14:20,990:INFO:                shap: Not installed
2025-02-06 17:14:20,990:INFO:           interpret: Not installed
2025-02-06 17:14:20,990:INFO:                umap: Not installed
2025-02-06 17:14:20,990:INFO:     ydata_profiling: Not installed
2025-02-06 17:14:21,000:INFO:  explainerdashboard: Not installed
2025-02-06 17:14:21,000:INFO:             autoviz: Not installed
2025-02-06 17:14:21,000:INFO:           fairlearn: Not installed
2025-02-06 17:14:21,000:INFO:          deepchecks: Not installed
2025-02-06 17:14:21,000:INFO:             xgboost: Not installed
2025-02-06 17:14:21,000:INFO:            catboost: Not installed
2025-02-06 17:14:21,000:INFO:              kmodes: Not installed
2025-02-06 17:14:21,000:INFO:             mlxtend: Not installed
2025-02-06 17:14:21,000:INFO:       statsforecast: Not installed
2025-02-06 17:14:21,000:INFO:        tune_sklearn: Not installed
2025-02-06 17:14:21,000:INFO:                 ray: Not installed
2025-02-06 17:14:21,000:INFO:            hyperopt: Not installed
2025-02-06 17:14:21,000:INFO:              optuna: Not installed
2025-02-06 17:14:21,000:INFO:               skopt: Not installed
2025-02-06 17:14:21,000:INFO:              mlflow: Not installed
2025-02-06 17:14:21,000:INFO:              gradio: Not installed
2025-02-06 17:14:21,000:INFO:             fastapi: 0.112.0
2025-02-06 17:14:21,016:INFO:             uvicorn: 0.30.5
2025-02-06 17:14:21,016:INFO:              m2cgen: Not installed
2025-02-06 17:14:21,016:INFO:           evidently: Not installed
2025-02-06 17:14:21,016:INFO:               fugue: Not installed
2025-02-06 17:14:21,016:INFO:           streamlit: Not installed
2025-02-06 17:14:21,016:INFO:             prophet: Not installed
2025-02-06 17:14:21,016:INFO:None
2025-02-06 17:14:21,016:INFO:Set up data.
2025-02-06 17:16:01,713:INFO:PyCaret ClassificationExperiment
2025-02-06 17:16:01,713:INFO:Logging name: clf-default-name
2025-02-06 17:16:01,713:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-06 17:16:01,713:INFO:version 3.3.2
2025-02-06 17:16:01,713:INFO:Initializing setup()
2025-02-06 17:16:01,713:INFO:self.USI: 6442
2025-02-06 17:16:01,713:INFO:self._variable_keys: {'fold_shuffle_param', '_available_plots', 'X_train', 'fix_imbalance', 'fold_generator', 'USI', '_ml_usecase', 'seed', 'gpu_param', 'html_param', 'logging_param', 'data', 'y_test', 'exp_name_log', 'n_jobs_param', 'target_param', 'idx', 'memory', 'pipeline', 'exp_id', 'log_plots_param', 'gpu_n_jobs_param', 'y', 'fold_groups_param', 'y_train', 'X_test', 'is_multiclass', 'X'}
2025-02-06 17:16:01,713:INFO:Checking environment
2025-02-06 17:16:01,713:INFO:python_version: 3.11.5
2025-02-06 17:16:01,713:INFO:python_build: ('tags/v3.11.5:cce6ba9', 'Aug 24 2023 14:38:34')
2025-02-06 17:16:01,713:INFO:machine: AMD64
2025-02-06 17:16:01,713:INFO:platform: Windows-10-10.0.22631-SP0
2025-02-06 17:16:01,729:INFO:Memory: svmem(total=7772880896, available=998940672, percent=87.1, used=6773940224, free=998940672)
2025-02-06 17:16:01,729:INFO:Physical Core: 4
2025-02-06 17:16:01,730:INFO:Logical Core: 8
2025-02-06 17:16:01,730:INFO:Checking libraries
2025-02-06 17:16:01,730:INFO:System:
2025-02-06 17:16:01,731:INFO:    python: 3.11.5 (tags/v3.11.5:cce6ba9, Aug 24 2023, 14:38:34) [MSC v.1936 64 bit (AMD64)]
2025-02-06 17:16:01,731:INFO:executable: c:\Users\brisa\AppData\Local\Programs\Python\Python311\python.exe
2025-02-06 17:16:01,731:INFO:   machine: Windows-10-10.0.22631-SP0
2025-02-06 17:16:01,731:INFO:PyCaret required dependencies:
2025-02-06 17:16:01,731:INFO:                 pip: 24.2
2025-02-06 17:16:01,731:INFO:          setuptools: 65.5.0
2025-02-06 17:16:01,731:INFO:             pycaret: 3.3.2
2025-02-06 17:16:01,731:INFO:             IPython: 8.26.0
2025-02-06 17:16:01,731:INFO:          ipywidgets: 8.1.5
2025-02-06 17:16:01,731:INFO:                tqdm: 4.66.5
2025-02-06 17:16:01,731:INFO:               numpy: 1.26.4
2025-02-06 17:16:01,731:INFO:              pandas: 2.1.4
2025-02-06 17:16:01,731:INFO:              jinja2: 3.1.4
2025-02-06 17:16:01,731:INFO:               scipy: 1.11.4
2025-02-06 17:16:01,731:INFO:              joblib: 1.3.2
2025-02-06 17:16:01,731:INFO:             sklearn: 1.4.2
2025-02-06 17:16:01,731:INFO:                pyod: 2.0.3
2025-02-06 17:16:01,731:INFO:            imblearn: 0.13.0
2025-02-06 17:16:01,731:INFO:   category_encoders: 2.7.0
2025-02-06 17:16:01,731:INFO:            lightgbm: 4.5.0
2025-02-06 17:16:01,731:INFO:               numba: 0.60.0
2025-02-06 17:16:01,731:INFO:            requests: 2.32.3
2025-02-06 17:16:01,731:INFO:          matplotlib: 3.7.5
2025-02-06 17:16:01,731:INFO:          scikitplot: 0.3.7
2025-02-06 17:16:01,731:INFO:         yellowbrick: 1.5
2025-02-06 17:16:01,731:INFO:              plotly: 5.24.1
2025-02-06 17:16:01,731:INFO:    plotly-resampler: Not installed
2025-02-06 17:16:01,731:INFO:             kaleido: 0.2.1
2025-02-06 17:16:01,731:INFO:           schemdraw: 0.15
2025-02-06 17:16:01,731:INFO:         statsmodels: 0.14.4
2025-02-06 17:16:01,731:INFO:              sktime: 0.26.0
2025-02-06 17:16:01,731:INFO:               tbats: 1.1.3
2025-02-06 17:16:01,731:INFO:            pmdarima: 2.0.4
2025-02-06 17:16:01,731:INFO:              psutil: 6.0.0
2025-02-06 17:16:01,731:INFO:          markupsafe: 2.1.5
2025-02-06 17:16:01,731:INFO:             pickle5: Not installed
2025-02-06 17:16:01,731:INFO:         cloudpickle: 3.1.1
2025-02-06 17:16:01,731:INFO:         deprecation: 2.1.0
2025-02-06 17:16:01,731:INFO:              xxhash: 3.5.0
2025-02-06 17:16:01,731:INFO:           wurlitzer: Not installed
2025-02-06 17:16:01,731:INFO:PyCaret optional dependencies:
2025-02-06 17:16:01,731:INFO:                shap: Not installed
2025-02-06 17:16:01,731:INFO:           interpret: Not installed
2025-02-06 17:16:01,731:INFO:                umap: Not installed
2025-02-06 17:16:01,731:INFO:     ydata_profiling: Not installed
2025-02-06 17:16:01,731:INFO:  explainerdashboard: Not installed
2025-02-06 17:16:01,731:INFO:             autoviz: Not installed
2025-02-06 17:16:01,731:INFO:           fairlearn: Not installed
2025-02-06 17:16:01,731:INFO:          deepchecks: Not installed
2025-02-06 17:16:01,731:INFO:             xgboost: Not installed
2025-02-06 17:16:01,731:INFO:            catboost: Not installed
2025-02-06 17:16:01,731:INFO:              kmodes: Not installed
2025-02-06 17:16:01,731:INFO:             mlxtend: Not installed
2025-02-06 17:16:01,731:INFO:       statsforecast: Not installed
2025-02-06 17:16:01,731:INFO:        tune_sklearn: Not installed
2025-02-06 17:16:01,731:INFO:                 ray: Not installed
2025-02-06 17:16:01,731:INFO:            hyperopt: Not installed
2025-02-06 17:16:01,731:INFO:              optuna: Not installed
2025-02-06 17:16:01,731:INFO:               skopt: Not installed
2025-02-06 17:16:01,731:INFO:              mlflow: Not installed
2025-02-06 17:16:01,731:INFO:              gradio: Not installed
2025-02-06 17:16:01,731:INFO:             fastapi: 0.112.0
2025-02-06 17:16:01,731:INFO:             uvicorn: 0.30.5
2025-02-06 17:16:01,731:INFO:              m2cgen: Not installed
2025-02-06 17:16:01,731:INFO:           evidently: Not installed
2025-02-06 17:16:01,731:INFO:               fugue: Not installed
2025-02-06 17:16:01,745:INFO:           streamlit: Not installed
2025-02-06 17:16:01,745:INFO:             prophet: Not installed
2025-02-06 17:16:01,745:INFO:None
2025-02-06 17:16:01,745:INFO:Set up data.
2025-02-06 17:16:01,868:INFO:Set up folding strategy.
2025-02-06 17:16:01,868:INFO:Set up train/test split.
2025-02-06 17:16:02,058:INFO:Set up index.
2025-02-06 17:16:02,058:INFO:Assigning column types.
2025-02-06 17:16:02,115:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-06 17:16:02,214:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-06 17:16:02,230:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-06 17:16:02,311:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:02,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:02,428:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-06 17:16:02,428:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-06 17:16:02,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:02,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:02,491:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-06 17:16:02,611:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-06 17:16:02,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:02,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:02,792:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-06 17:16:02,867:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:02,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:02,867:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-06 17:16:03,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:03,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:03,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:03,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:03,387:INFO:Preparing preprocessing pipeline...
2025-02-06 17:16:03,418:INFO:Set up label encoding.
2025-02-06 17:16:03,418:INFO:Set up simple imputation.
2025-02-06 17:16:03,450:INFO:Set up encoding of ordinal features.
2025-02-06 17:16:03,466:INFO:Set up encoding of categorical features.
2025-02-06 17:16:04,347:INFO:Finished creating preprocessing pipeline.
2025-02-06 17:16:04,379:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brisa\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['MinTemp', 'MaxTemp', 'Rainfall',
                                             'Evaporation', 'Sunshine',
                                             'WindGustSpeed', 'WindSpeed9am',
                                             'WindSpeed3pm...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Date'],
                                    transformer=TargetEncoder(cols=['Date'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-02-06 17:16:04,379:INFO:Creating final display dataframe.
2025-02-06 17:16:05,914:INFO:Setup _display_container:                     Description             Value
0                    Session id              7696
1                        Target      RainTomorrow
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape       (29560, 22)
5        Transformed data shape       (29560, 67)
6   Transformed train set shape       (20692, 67)
7    Transformed test set shape        (8868, 67)
8              Numeric features                16
9          Categorical features                 5
10     Rows with missing values             62.7%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              6442
2025-02-06 17:16:06,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:06,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:06,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:06,310:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-06 17:16:06,310:INFO:setup() successfully completed in 4.6s...............
2025-02-06 17:16:12,747:INFO:Initializing compare_models()
2025-02-06 17:16:12,756:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-02-06 17:16:12,758:INFO:Checking exceptions
2025-02-06 17:16:12,788:INFO:Preparing display monitor
2025-02-06 17:16:12,950:INFO:Initializing Logistic Regression
2025-02-06 17:16:12,950:INFO:Total runtime is 0.0 minutes
2025-02-06 17:16:12,975:INFO:SubProcess create_model() called ==================================
2025-02-06 17:16:12,975:INFO:Initializing create_model()
2025-02-06 17:16:12,975:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:16:12,975:INFO:Checking exceptions
2025-02-06 17:16:12,981:INFO:Importing libraries
2025-02-06 17:16:12,981:INFO:Copying training dataset
2025-02-06 17:16:13,037:INFO:Defining folds
2025-02-06 17:16:13,037:INFO:Declaring metric variables
2025-02-06 17:16:13,045:INFO:Importing untrained model
2025-02-06 17:16:13,061:INFO:Logistic Regression Imported successfully
2025-02-06 17:16:13,077:INFO:Starting cross validation
2025-02-06 17:16:13,085:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:16:42,626:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-06 17:16:43,056:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:43,123:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:43,182:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:45,432:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-06 17:16:45,752:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:45,795:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:45,881:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-06 17:16:45,894:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:46,128:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:46,174:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:46,180:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-06 17:16:46,207:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:46,388:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:46,437:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:46,467:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:48,690:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-06 17:16:48,978:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:49,011:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:49,059:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:49,137:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-06 17:16:49,432:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:49,472:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:49,513:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-06 17:16:49,544:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:49,813:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:49,848:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:49,886:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:49,896:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-06 17:16:50,083:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:50,115:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:50,145:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:55,590:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-06 17:16:55,759:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:55,780:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:55,810:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:55,946:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-06 17:16:56,091:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:56,111:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:56,133:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:16:56,173:INFO:Calculating mean and std
2025-02-06 17:16:56,181:INFO:Creating metrics dataframe
2025-02-06 17:16:56,189:INFO:Uploading results into container
2025-02-06 17:16:56,189:INFO:Uploading model into container now
2025-02-06 17:16:56,197:INFO:_master_model_container: 1
2025-02-06 17:16:56,197:INFO:_display_container: 2
2025-02-06 17:16:56,197:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7696, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-06 17:16:56,197:INFO:create_model() successfully completed......................................
2025-02-06 17:16:57,840:INFO:SubProcess create_model() end ==================================
2025-02-06 17:16:57,840:INFO:Creating metrics dataframe
2025-02-06 17:16:57,857:INFO:Initializing K Neighbors Classifier
2025-02-06 17:16:57,857:INFO:Total runtime is 0.7484423398971558 minutes
2025-02-06 17:16:57,871:INFO:SubProcess create_model() called ==================================
2025-02-06 17:16:57,871:INFO:Initializing create_model()
2025-02-06 17:16:57,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:16:57,871:INFO:Checking exceptions
2025-02-06 17:16:57,873:INFO:Importing libraries
2025-02-06 17:16:57,873:INFO:Copying training dataset
2025-02-06 17:16:57,914:INFO:Defining folds
2025-02-06 17:16:57,914:INFO:Declaring metric variables
2025-02-06 17:16:57,923:INFO:Importing untrained model
2025-02-06 17:16:57,931:INFO:K Neighbors Classifier Imported successfully
2025-02-06 17:16:57,957:INFO:Starting cross validation
2025-02-06 17:16:57,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:17:02,330:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,370:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,377:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,377:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,393:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,410:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,425:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,430:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,442:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,459:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,471:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,519:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,594:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,624:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,661:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,840:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,880:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,911:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:02,984:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:03,018:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:03,031:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:03,063:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:03,077:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:03,103:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:05,164:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:05,196:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:05,228:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:05,228:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:05,259:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:05,284:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:05,334:INFO:Calculating mean and std
2025-02-06 17:17:05,334:INFO:Creating metrics dataframe
2025-02-06 17:17:05,339:INFO:Uploading results into container
2025-02-06 17:17:05,339:INFO:Uploading model into container now
2025-02-06 17:17:05,339:INFO:_master_model_container: 2
2025-02-06 17:17:05,339:INFO:_display_container: 2
2025-02-06 17:17:05,339:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-06 17:17:05,339:INFO:create_model() successfully completed......................................
2025-02-06 17:17:05,609:INFO:SubProcess create_model() end ==================================
2025-02-06 17:17:05,609:INFO:Creating metrics dataframe
2025-02-06 17:17:05,625:INFO:Initializing Naive Bayes
2025-02-06 17:17:05,625:INFO:Total runtime is 0.8779104868570964 minutes
2025-02-06 17:17:05,625:INFO:SubProcess create_model() called ==================================
2025-02-06 17:17:05,625:INFO:Initializing create_model()
2025-02-06 17:17:05,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:17:05,641:INFO:Checking exceptions
2025-02-06 17:17:05,641:INFO:Importing libraries
2025-02-06 17:17:05,641:INFO:Copying training dataset
2025-02-06 17:17:05,711:INFO:Defining folds
2025-02-06 17:17:05,711:INFO:Declaring metric variables
2025-02-06 17:17:05,729:INFO:Importing untrained model
2025-02-06 17:17:05,738:INFO:Naive Bayes Imported successfully
2025-02-06 17:17:05,767:INFO:Starting cross validation
2025-02-06 17:17:05,772:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:17:07,663:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,673:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,715:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,725:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,725:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,755:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,755:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,781:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,789:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,789:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,827:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,845:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,855:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,874:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,911:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,911:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,922:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,947:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,953:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,959:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,959:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,979:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:07,979:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:08,011:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:08,719:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:08,751:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:08,778:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:08,778:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:08,808:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:08,829:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:08,870:INFO:Calculating mean and std
2025-02-06 17:17:08,874:INFO:Creating metrics dataframe
2025-02-06 17:17:08,880:INFO:Uploading results into container
2025-02-06 17:17:08,880:INFO:Uploading model into container now
2025-02-06 17:17:08,884:INFO:_master_model_container: 3
2025-02-06 17:17:08,885:INFO:_display_container: 2
2025-02-06 17:17:08,885:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-06 17:17:08,885:INFO:create_model() successfully completed......................................
2025-02-06 17:17:09,069:INFO:SubProcess create_model() end ==================================
2025-02-06 17:17:09,069:INFO:Creating metrics dataframe
2025-02-06 17:17:09,084:INFO:Initializing Decision Tree Classifier
2025-02-06 17:17:09,084:INFO:Total runtime is 0.9355668028195699 minutes
2025-02-06 17:17:09,084:INFO:SubProcess create_model() called ==================================
2025-02-06 17:17:09,084:INFO:Initializing create_model()
2025-02-06 17:17:09,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:17:09,084:INFO:Checking exceptions
2025-02-06 17:17:09,084:INFO:Importing libraries
2025-02-06 17:17:09,084:INFO:Copying training dataset
2025-02-06 17:17:09,141:INFO:Defining folds
2025-02-06 17:17:09,141:INFO:Declaring metric variables
2025-02-06 17:17:09,146:INFO:Importing untrained model
2025-02-06 17:17:09,155:INFO:Decision Tree Classifier Imported successfully
2025-02-06 17:17:09,179:INFO:Starting cross validation
2025-02-06 17:17:09,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:17:11,557:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,590:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,644:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,672:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,719:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,740:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,755:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,774:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,805:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,861:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,893:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,893:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,925:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,942:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:11,975:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:12,107:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:12,144:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:12,179:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:12,179:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:12,224:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:12,257:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:12,349:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:12,380:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:12,412:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:13,270:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:13,285:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:13,301:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:13,317:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:13,333:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:13,344:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:13,392:INFO:Calculating mean and std
2025-02-06 17:17:13,392:INFO:Creating metrics dataframe
2025-02-06 17:17:13,392:INFO:Uploading results into container
2025-02-06 17:17:13,392:INFO:Uploading model into container now
2025-02-06 17:17:13,392:INFO:_master_model_container: 4
2025-02-06 17:17:13,392:INFO:_display_container: 2
2025-02-06 17:17:13,403:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7696, splitter='best')
2025-02-06 17:17:13,403:INFO:create_model() successfully completed......................................
2025-02-06 17:17:13,605:INFO:SubProcess create_model() end ==================================
2025-02-06 17:17:13,605:INFO:Creating metrics dataframe
2025-02-06 17:17:13,622:INFO:Initializing SVM - Linear Kernel
2025-02-06 17:17:13,630:INFO:Total runtime is 1.0113248785336812 minutes
2025-02-06 17:17:13,630:INFO:SubProcess create_model() called ==================================
2025-02-06 17:17:13,630:INFO:Initializing create_model()
2025-02-06 17:17:13,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:17:13,630:INFO:Checking exceptions
2025-02-06 17:17:13,630:INFO:Importing libraries
2025-02-06 17:17:13,630:INFO:Copying training dataset
2025-02-06 17:17:13,679:INFO:Defining folds
2025-02-06 17:17:13,679:INFO:Declaring metric variables
2025-02-06 17:17:13,688:INFO:Importing untrained model
2025-02-06 17:17:13,695:INFO:SVM - Linear Kernel Imported successfully
2025-02-06 17:17:13,723:INFO:Starting cross validation
2025-02-06 17:17:13,723:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:17:18,071:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:18,145:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:18,207:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:18,560:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:18,596:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:18,627:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:18,637:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:18,668:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:18,699:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:19,383:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:19,406:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:19,410:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:19,439:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:19,444:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:19,472:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:19,743:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:19,775:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:19,819:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:20,196:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:20,225:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:20,253:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:20,786:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:20,819:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:20,848:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:21,805:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:21,826:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:21,846:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:22,294:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:22,322:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:22,338:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:22,385:INFO:Calculating mean and std
2025-02-06 17:17:22,387:INFO:Creating metrics dataframe
2025-02-06 17:17:22,392:INFO:Uploading results into container
2025-02-06 17:17:22,392:INFO:Uploading model into container now
2025-02-06 17:17:22,392:INFO:_master_model_container: 5
2025-02-06 17:17:22,392:INFO:_display_container: 2
2025-02-06 17:17:22,392:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7696, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-06 17:17:22,392:INFO:create_model() successfully completed......................................
2025-02-06 17:17:22,575:INFO:SubProcess create_model() end ==================================
2025-02-06 17:17:22,575:INFO:Creating metrics dataframe
2025-02-06 17:17:22,586:INFO:Initializing Ridge Classifier
2025-02-06 17:17:22,586:INFO:Total runtime is 1.1606001377105712 minutes
2025-02-06 17:17:22,606:INFO:SubProcess create_model() called ==================================
2025-02-06 17:17:22,609:INFO:Initializing create_model()
2025-02-06 17:17:22,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:17:22,609:INFO:Checking exceptions
2025-02-06 17:17:22,609:INFO:Importing libraries
2025-02-06 17:17:22,609:INFO:Copying training dataset
2025-02-06 17:17:22,670:INFO:Defining folds
2025-02-06 17:17:22,675:INFO:Declaring metric variables
2025-02-06 17:17:22,687:INFO:Importing untrained model
2025-02-06 17:17:22,695:INFO:Ridge Classifier Imported successfully
2025-02-06 17:17:22,715:INFO:Starting cross validation
2025-02-06 17:17:22,723:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:17:24,285:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,307:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,322:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,332:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,354:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,369:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,375:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,378:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,401:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,417:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,443:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,454:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,751:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,770:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,794:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,806:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,835:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,839:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,839:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,842:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,881:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,887:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,922:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:24,922:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:25,346:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:25,366:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:25,377:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:25,388:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:25,403:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:25,419:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:25,460:INFO:Calculating mean and std
2025-02-06 17:17:25,460:INFO:Creating metrics dataframe
2025-02-06 17:17:25,467:INFO:Uploading results into container
2025-02-06 17:17:25,467:INFO:Uploading model into container now
2025-02-06 17:17:25,470:INFO:_master_model_container: 6
2025-02-06 17:17:25,470:INFO:_display_container: 2
2025-02-06 17:17:25,473:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7696, solver='auto',
                tol=0.0001)
2025-02-06 17:17:25,473:INFO:create_model() successfully completed......................................
2025-02-06 17:17:25,673:INFO:SubProcess create_model() end ==================================
2025-02-06 17:17:25,673:INFO:Creating metrics dataframe
2025-02-06 17:17:25,688:INFO:Initializing Random Forest Classifier
2025-02-06 17:17:25,688:INFO:Total runtime is 1.2123010635375977 minutes
2025-02-06 17:17:25,704:INFO:SubProcess create_model() called ==================================
2025-02-06 17:17:25,704:INFO:Initializing create_model()
2025-02-06 17:17:25,704:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:17:25,704:INFO:Checking exceptions
2025-02-06 17:17:25,704:INFO:Importing libraries
2025-02-06 17:17:25,704:INFO:Copying training dataset
2025-02-06 17:17:25,748:INFO:Defining folds
2025-02-06 17:17:25,748:INFO:Declaring metric variables
2025-02-06 17:17:25,761:INFO:Importing untrained model
2025-02-06 17:17:25,772:INFO:Random Forest Classifier Imported successfully
2025-02-06 17:17:25,794:INFO:Starting cross validation
2025-02-06 17:17:25,802:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:17:37,256:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,256:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,271:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,309:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,325:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,332:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,348:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,348:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,360:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,373:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,373:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,380:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,380:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,412:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,412:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,617:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,654:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,726:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,749:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,770:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,789:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,797:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,821:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:37,837:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:41,103:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:41,153:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:41,184:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:41,320:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:41,340:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:41,361:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:41,402:INFO:Calculating mean and std
2025-02-06 17:17:41,402:INFO:Creating metrics dataframe
2025-02-06 17:17:41,408:INFO:Uploading results into container
2025-02-06 17:17:41,408:INFO:Uploading model into container now
2025-02-06 17:17:41,410:INFO:_master_model_container: 7
2025-02-06 17:17:41,410:INFO:_display_container: 2
2025-02-06 17:17:41,413:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7696, verbose=0,
                       warm_start=False)
2025-02-06 17:17:41,413:INFO:create_model() successfully completed......................................
2025-02-06 17:17:41,602:INFO:SubProcess create_model() end ==================================
2025-02-06 17:17:41,615:INFO:Creating metrics dataframe
2025-02-06 17:17:41,632:INFO:Initializing Quadratic Discriminant Analysis
2025-02-06 17:17:41,632:INFO:Total runtime is 1.4780243277549743 minutes
2025-02-06 17:17:41,641:INFO:SubProcess create_model() called ==================================
2025-02-06 17:17:41,641:INFO:Initializing create_model()
2025-02-06 17:17:41,641:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:17:41,641:INFO:Checking exceptions
2025-02-06 17:17:41,641:INFO:Importing libraries
2025-02-06 17:17:41,641:INFO:Copying training dataset
2025-02-06 17:17:41,685:INFO:Defining folds
2025-02-06 17:17:41,685:INFO:Declaring metric variables
2025-02-06 17:17:41,695:INFO:Importing untrained model
2025-02-06 17:17:41,703:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-06 17:17:41,735:INFO:Starting cross validation
2025-02-06 17:17:41,752:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:17:43,721:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-06 17:17:43,727:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-06 17:17:43,743:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-06 17:17:43,778:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-06 17:17:43,823:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-06 17:17:43,853:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-06 17:17:43,866:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-06 17:17:44,106:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,134:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,134:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,155:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,166:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,166:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,186:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,206:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,221:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,293:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-06 17:17:44,313:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,344:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,344:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,344:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,374:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,386:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,386:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,403:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,424:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,425:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,436:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,467:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,600:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,635:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:44,662:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:45,041:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-06 17:17:45,174:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-02-06 17:17:45,300:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:45,320:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:45,350:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:45,370:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:45,391:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:45,417:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:45,453:INFO:Calculating mean and std
2025-02-06 17:17:45,453:INFO:Creating metrics dataframe
2025-02-06 17:17:45,459:INFO:Uploading results into container
2025-02-06 17:17:45,459:INFO:Uploading model into container now
2025-02-06 17:17:45,459:INFO:_master_model_container: 8
2025-02-06 17:17:45,459:INFO:_display_container: 2
2025-02-06 17:17:45,459:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-06 17:17:45,463:INFO:create_model() successfully completed......................................
2025-02-06 17:17:45,648:INFO:SubProcess create_model() end ==================================
2025-02-06 17:17:45,648:INFO:Creating metrics dataframe
2025-02-06 17:17:45,663:INFO:Initializing Ada Boost Classifier
2025-02-06 17:17:45,663:INFO:Total runtime is 1.5452130595842997 minutes
2025-02-06 17:17:45,679:INFO:SubProcess create_model() called ==================================
2025-02-06 17:17:45,679:INFO:Initializing create_model()
2025-02-06 17:17:45,679:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:17:45,679:INFO:Checking exceptions
2025-02-06 17:17:45,679:INFO:Importing libraries
2025-02-06 17:17:45,679:INFO:Copying training dataset
2025-02-06 17:17:45,719:INFO:Defining folds
2025-02-06 17:17:45,719:INFO:Declaring metric variables
2025-02-06 17:17:45,736:INFO:Importing untrained model
2025-02-06 17:17:45,741:INFO:Ada Boost Classifier Imported successfully
2025-02-06 17:17:45,768:INFO:Starting cross validation
2025-02-06 17:17:45,776:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:17:46,817:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-06 17:17:46,827:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-06 17:17:46,842:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-06 17:17:46,848:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-06 17:17:47,213:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-06 17:17:47,254:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-06 17:17:47,256:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-06 17:17:47,452:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-06 17:17:51,289:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:51,299:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:51,315:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:51,332:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:51,332:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:51,348:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:51,364:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:51,364:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:51,389:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:51,505:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:51,538:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:51,574:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,219:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-06 17:17:52,275:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-06 17:17:52,401:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,443:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,443:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,474:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,474:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,474:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,507:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,517:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,540:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,548:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,573:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:52,603:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:55,755:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:55,776:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:55,797:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:55,841:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:55,868:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:55,912:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:17:55,960:INFO:Calculating mean and std
2025-02-06 17:17:55,960:INFO:Creating metrics dataframe
2025-02-06 17:17:55,960:INFO:Uploading results into container
2025-02-06 17:17:55,960:INFO:Uploading model into container now
2025-02-06 17:17:55,968:INFO:_master_model_container: 9
2025-02-06 17:17:55,968:INFO:_display_container: 2
2025-02-06 17:17:55,968:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7696)
2025-02-06 17:17:55,968:INFO:create_model() successfully completed......................................
2025-02-06 17:17:56,171:INFO:SubProcess create_model() end ==================================
2025-02-06 17:17:56,171:INFO:Creating metrics dataframe
2025-02-06 17:17:56,184:INFO:Initializing Gradient Boosting Classifier
2025-02-06 17:17:56,184:INFO:Total runtime is 1.720566964149475 minutes
2025-02-06 17:17:56,201:INFO:SubProcess create_model() called ==================================
2025-02-06 17:17:56,201:INFO:Initializing create_model()
2025-02-06 17:17:56,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:17:56,201:INFO:Checking exceptions
2025-02-06 17:17:56,201:INFO:Importing libraries
2025-02-06 17:17:56,201:INFO:Copying training dataset
2025-02-06 17:17:56,253:INFO:Defining folds
2025-02-06 17:17:56,253:INFO:Declaring metric variables
2025-02-06 17:17:56,269:INFO:Importing untrained model
2025-02-06 17:17:56,285:INFO:Gradient Boosting Classifier Imported successfully
2025-02-06 17:17:56,302:INFO:Starting cross validation
2025-02-06 17:17:56,310:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:18:10,072:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,106:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,142:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,238:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,269:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,279:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,300:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,312:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,341:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,608:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,643:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,674:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,750:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,788:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,818:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,878:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,914:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,945:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,956:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:10,996:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:11,015:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:11,038:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:11,049:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:11,084:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:21,049:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:21,071:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:21,098:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:21,121:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:21,151:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:21,165:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:21,203:INFO:Calculating mean and std
2025-02-06 17:18:21,203:INFO:Creating metrics dataframe
2025-02-06 17:18:21,206:INFO:Uploading results into container
2025-02-06 17:18:21,206:INFO:Uploading model into container now
2025-02-06 17:18:21,206:INFO:_master_model_container: 10
2025-02-06 17:18:21,206:INFO:_display_container: 2
2025-02-06 17:18:21,206:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7696, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-06 17:18:21,211:INFO:create_model() successfully completed......................................
2025-02-06 17:18:21,365:INFO:SubProcess create_model() end ==================================
2025-02-06 17:18:21,365:INFO:Creating metrics dataframe
2025-02-06 17:18:21,387:INFO:Initializing Linear Discriminant Analysis
2025-02-06 17:18:21,387:INFO:Total runtime is 2.14061594804128 minutes
2025-02-06 17:18:21,398:INFO:SubProcess create_model() called ==================================
2025-02-06 17:18:21,398:INFO:Initializing create_model()
2025-02-06 17:18:21,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:18:21,398:INFO:Checking exceptions
2025-02-06 17:18:21,398:INFO:Importing libraries
2025-02-06 17:18:21,398:INFO:Copying training dataset
2025-02-06 17:18:21,448:INFO:Defining folds
2025-02-06 17:18:21,448:INFO:Declaring metric variables
2025-02-06 17:18:21,454:INFO:Importing untrained model
2025-02-06 17:18:21,464:INFO:Linear Discriminant Analysis Imported successfully
2025-02-06 17:18:21,487:INFO:Starting cross validation
2025-02-06 17:18:21,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:18:24,055:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,065:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,072:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,097:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,107:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,115:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,138:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,138:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,138:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,153:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,176:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,176:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,185:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,216:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,222:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,222:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,252:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,265:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,268:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,303:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,313:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,334:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,354:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:24,385:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:25,281:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:25,288:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:25,309:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:25,309:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:25,335:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:25,335:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:25,380:INFO:Calculating mean and std
2025-02-06 17:18:25,382:INFO:Creating metrics dataframe
2025-02-06 17:18:25,389:INFO:Uploading results into container
2025-02-06 17:18:25,389:INFO:Uploading model into container now
2025-02-06 17:18:25,389:INFO:_master_model_container: 11
2025-02-06 17:18:25,389:INFO:_display_container: 2
2025-02-06 17:18:25,394:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-06 17:18:25,395:INFO:create_model() successfully completed......................................
2025-02-06 17:18:25,601:INFO:SubProcess create_model() end ==================================
2025-02-06 17:18:25,601:INFO:Creating metrics dataframe
2025-02-06 17:18:25,619:INFO:Initializing Extra Trees Classifier
2025-02-06 17:18:25,619:INFO:Total runtime is 2.211138359705607 minutes
2025-02-06 17:18:25,619:INFO:SubProcess create_model() called ==================================
2025-02-06 17:18:25,619:INFO:Initializing create_model()
2025-02-06 17:18:25,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:18:25,619:INFO:Checking exceptions
2025-02-06 17:18:25,619:INFO:Importing libraries
2025-02-06 17:18:25,634:INFO:Copying training dataset
2025-02-06 17:18:25,681:INFO:Defining folds
2025-02-06 17:18:25,682:INFO:Declaring metric variables
2025-02-06 17:18:25,690:INFO:Importing untrained model
2025-02-06 17:18:25,705:INFO:Extra Trees Classifier Imported successfully
2025-02-06 17:18:25,722:INFO:Starting cross validation
2025-02-06 17:18:25,731:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:18:38,147:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,181:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,214:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,260:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,299:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,328:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,329:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,347:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,404:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,420:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,451:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,460:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,464:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,499:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,499:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,714:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,732:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,754:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,764:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,780:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,788:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,796:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,809:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:38,840:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:42,301:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:42,330:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:42,333:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:42,364:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:42,364:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:42,401:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:42,458:INFO:Calculating mean and std
2025-02-06 17:18:42,458:INFO:Creating metrics dataframe
2025-02-06 17:18:42,475:INFO:Uploading results into container
2025-02-06 17:18:42,477:INFO:Uploading model into container now
2025-02-06 17:18:42,477:INFO:_master_model_container: 12
2025-02-06 17:18:42,477:INFO:_display_container: 2
2025-02-06 17:18:42,481:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7696, verbose=0,
                     warm_start=False)
2025-02-06 17:18:42,481:INFO:create_model() successfully completed......................................
2025-02-06 17:18:42,863:INFO:SubProcess create_model() end ==================================
2025-02-06 17:18:42,863:INFO:Creating metrics dataframe
2025-02-06 17:18:42,902:INFO:Initializing Light Gradient Boosting Machine
2025-02-06 17:18:42,903:INFO:Total runtime is 2.4992092490196227 minutes
2025-02-06 17:18:42,910:INFO:SubProcess create_model() called ==================================
2025-02-06 17:18:42,914:INFO:Initializing create_model()
2025-02-06 17:18:42,914:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:18:42,914:INFO:Checking exceptions
2025-02-06 17:18:42,914:INFO:Importing libraries
2025-02-06 17:18:42,914:INFO:Copying training dataset
2025-02-06 17:18:42,984:INFO:Defining folds
2025-02-06 17:18:42,984:INFO:Declaring metric variables
2025-02-06 17:18:43,000:INFO:Importing untrained model
2025-02-06 17:18:43,008:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-06 17:18:43,032:INFO:Starting cross validation
2025-02-06 17:18:43,048:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:18:48,263:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,276:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,293:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,309:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,324:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,324:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,340:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,363:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,392:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,411:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,458:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,490:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,661:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,697:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:48,730:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:49,041:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:49,097:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:49,097:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:49,141:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:49,181:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:49,335:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:49,363:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:49,386:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:49,967:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:49,995:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:50,000:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:50,021:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:50,026:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:50,051:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:50,102:INFO:Calculating mean and std
2025-02-06 17:18:50,102:INFO:Creating metrics dataframe
2025-02-06 17:18:50,105:INFO:Uploading results into container
2025-02-06 17:18:50,105:INFO:Uploading model into container now
2025-02-06 17:18:50,105:INFO:_master_model_container: 13
2025-02-06 17:18:50,105:INFO:_display_container: 2
2025-02-06 17:18:50,105:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7696, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-06 17:18:50,118:INFO:create_model() successfully completed......................................
2025-02-06 17:18:50,412:INFO:SubProcess create_model() end ==================================
2025-02-06 17:18:50,412:INFO:Creating metrics dataframe
2025-02-06 17:18:50,443:INFO:Initializing Dummy Classifier
2025-02-06 17:18:50,443:INFO:Total runtime is 2.6248731811841326 minutes
2025-02-06 17:18:50,443:INFO:SubProcess create_model() called ==================================
2025-02-06 17:18:50,443:INFO:Initializing create_model()
2025-02-06 17:18:50,443:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001EF6AD3E750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:18:50,443:INFO:Checking exceptions
2025-02-06 17:18:50,443:INFO:Importing libraries
2025-02-06 17:18:50,458:INFO:Copying training dataset
2025-02-06 17:18:50,490:INFO:Defining folds
2025-02-06 17:18:50,490:INFO:Declaring metric variables
2025-02-06 17:18:50,516:INFO:Importing untrained model
2025-02-06 17:18:50,536:INFO:Dummy Classifier Imported successfully
2025-02-06 17:18:50,563:INFO:Starting cross validation
2025-02-06 17:18:50,577:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-06 17:18:51,799:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:51,818:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:51,831:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:51,848:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-06 17:18:51,848:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:51,869:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:51,869:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-06 17:18:51,890:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,236:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,267:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,286:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-06 17:18:52,306:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,357:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,388:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,429:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-06 17:18:52,442:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,649:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,679:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,703:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-06 17:18:52,708:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,719:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,719:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,759:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,759:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,759:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,780:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-06 17:18:52,780:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-06 17:18:52,795:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,795:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,800:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,820:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-06 17:18:52,841:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,923:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,937:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,953:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,969:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-06 17:18:52,973:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:52,985:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-06 17:18:52,994:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-06 17:18:53,044:INFO:Calculating mean and std
2025-02-06 17:18:53,047:INFO:Creating metrics dataframe
2025-02-06 17:18:53,047:INFO:Uploading results into container
2025-02-06 17:18:53,047:INFO:Uploading model into container now
2025-02-06 17:18:53,047:INFO:_master_model_container: 14
2025-02-06 17:18:53,056:INFO:_display_container: 2
2025-02-06 17:18:53,056:INFO:DummyClassifier(constant=None, random_state=7696, strategy='prior')
2025-02-06 17:18:53,056:INFO:create_model() successfully completed......................................
2025-02-06 17:18:53,254:INFO:SubProcess create_model() end ==================================
2025-02-06 17:18:53,254:INFO:Creating metrics dataframe
2025-02-06 17:18:53,280:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-02-06 17:18:53,295:INFO:Initializing create_model()
2025-02-06 17:18:53,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001EF6A0424D0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7696, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-06 17:18:53,295:INFO:Checking exceptions
2025-02-06 17:18:53,302:INFO:Importing libraries
2025-02-06 17:18:53,302:INFO:Copying training dataset
2025-02-06 17:18:53,329:INFO:Defining folds
2025-02-06 17:18:53,329:INFO:Declaring metric variables
2025-02-06 17:18:53,329:INFO:Importing untrained model
2025-02-06 17:18:53,329:INFO:Declaring custom model
2025-02-06 17:18:53,329:INFO:Logistic Regression Imported successfully
2025-02-06 17:18:53,343:INFO:Cross validation set to False
2025-02-06 17:18:53,343:INFO:Fitting Model
2025-02-06 17:18:58,986:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-02-06 17:18:58,986:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7696, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-06 17:18:58,986:INFO:create_model() successfully completed......................................
2025-02-06 17:18:59,227:INFO:_master_model_container: 14
2025-02-06 17:18:59,227:INFO:_display_container: 2
2025-02-06 17:18:59,227:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7696, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-06 17:18:59,227:INFO:compare_models() successfully completed......................................
2025-02-06 17:22:28,692:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\142487796.py:18: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  metrics_df = pd.concat([metrics_df, new_row], ignore_index=True)

2025-02-09 23:12:09,360:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\1225913058.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['Date'] = pd.to_datetime(train['Date'])

2025-02-09 23:12:09,434:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\1225913058.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['Date'] = pd.to_datetime(test['Date'])

2025-02-09 23:12:09,455:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\1225913058.py:8: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['Date'] = (train['Date'] - base_date).dt.days

2025-02-09 23:12:09,457:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\1225913058.py:9: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['Date'] = (test['Date'] - base_date).dt.days

2025-02-09 23:12:33,492:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\3373215346.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train[col].fillna(train[col].median(), inplace=True)

2025-02-09 23:14:21,351:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\3373215346.py:8: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train[bimodal_columns] = knn_imputer.fit_transform(train[bimodal_columns])

2025-02-09 23:14:21,781:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\3813415309.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train[col].fillna(train[col].mode()[0], inplace=True)

2025-02-09 23:14:22,609:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\985624217.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test[col].fillna(train[col].median(), inplace=True)  # Usar la mediana del conjunto de entrenamiento

2025-02-09 23:14:39,655:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\985624217.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test[bimodal_columns] = knn_imputer.transform(test[bimodal_columns])  # Usar el imputador entrenado con el conjunto de entrenamiento

2025-02-09 23:14:39,662:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\985624217.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test[col].fillna(train[col].mode()[0], inplace=True)  # Usar la moda del conjunto de entrenamiento

2025-02-09 23:20:20,670:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\1098054911.py:12: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['WindGustDir'] = train['WindGustDir'].map(diccionario_invertido)

2025-02-09 23:20:20,676:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\1098054911.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['WindDir9am'] = train['WindDir9am'].map(diccionario_invertido)

2025-02-09 23:20:20,681:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\1098054911.py:18: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  train['WindDir3pm'] = train['WindDir3pm'].map(diccionario_invertido)

2025-02-09 23:20:20,971:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\1802969872.py:12: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['WindGustDir'] = test['WindGustDir'].map(diccionario_invertido)

2025-02-09 23:20:20,975:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\1802969872.py:15: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['WindDir9am'] = test['WindDir9am'].map(diccionario_invertido)

2025-02-09 23:20:20,977:WARNING:C:\Users\brisa\AppData\Local\Temp\ipykernel_2956\1802969872.py:18: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  test['WindDir3pm'] = test['WindDir3pm'].map(diccionario_invertido)

2025-02-09 23:21:39,799:WARNING:c:\Users\brisa\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

